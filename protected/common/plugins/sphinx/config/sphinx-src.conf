#############################################################################
## {{title}}
#############################################################################
## {{description}}
#############################################################################

source {{spinx_prefix}}dbSource
{
    # data source type. known types are mysql, pgsql, mssql, xmlpipe, xmlpipe2, odbc
    type        = {{db_type}}

    # some straightforward parameters for SQL source types
    sql_host    = {{db_host}}
    sql_user    = {{db_user}}
    sql_pass    = {{db_pass}}
    sql_db      = {{db_name}}
    sql_port    = {{db_port}}

    # UNIX socket name
    # optional, default is empty (reuse client library defaults)
    # usually '/var/lib/mysql/mysql.sock' on Linux
    # usually '/var/run/mysqld/mysqld.sock' on Debian
    # usually '/tmp/mysql.sock' on FreeBSD
    #
    sql_sock    = {{db_socket}}

    # enable compression
    mysql_connect_flags = 32

    sql_query_pre = SET NAMES utf8
    sql_query_pre = SET SESSION query_cache_type=OFF
}

source {{spinx_prefix}}topicsSource : {{spinx_prefix}}dbSource
{                                                               
    sql_query = \
        SELECT t.topic_id, t.topic_title, UNIX_TIMESTAMP(t.topic_date_add) as topic_date_add, \
        tc.topic_text, t.topic_publish, b.blog_title, u.user_login \
        FROM {{db_prefix}}topic t, {{db_prefix}}topic_content tc, {{db_prefix}}blog b, {{db_prefix}}user u \
        WHERE t.topic_id=tc.topic_id AND t.topic_publish=1 \
        AND t.topic_index_ignore=0 \
        AND b.blog_id=t.blog_id AND t.user_id=u.user_id \
        AND t.topic_id>=$start AND t.topic_id<=$end
 
    sql_joined_field = \
        tags from query; select topic_id, topic_tag_text \
        from {{db_prefix}}topic_tag order by topic_id ASC

    sql_query_range = SELECT MIN(topic_id),MAX(topic_id) FROM {{db_prefix}}topic
        
    sql_range_step = 1000

    sql_attr_bool = topic_publish

    sql_attr_timestamp = topic_date_add

    sql_attr_multi = uint tag from query; SELECT topic_id, topic_tag_id FROM {{db_prefix}}topic_tag
}

source {{spinx_prefix}}commentsSource : {{spinx_prefix}}dbSource
{
    sql_query = \
        SELECT m.comment_id, m.comment_text, UNIX_TIMESTAMP(m.comment_date) as comment_date, \
        m.comment_delete as comment_delete, u.user_login \
        FROM {{db_prefix}}comment m, {{db_prefix}}user u, {{db_prefix}}topic t \
        WHERE m.target_type='topic' AND m.comment_delete=0 AND m.comment_publish=1 AND m.user_id=u.user_id \
        AND m.target_id=t.topic_id AND t.topic_index_ignore=0 \
        AND m.comment_id>=$start AND m.comment_id<=$end

    sql_query_range = SELECT MIN(comment_id),MAX(comment_id) FROM {{db_prefix}}comment

    sql_range_step = 5000

    sql_attr_bool = comment_delete

    sql_attr_timestamp = comment_date
}

#############################################################################
## index definition
#############################################################################

index {{spinx_prefix}}topicsIndex
{
    source = {{spinx_prefix}}topicsSource

    path = {{spinx_path}}data/{{spinx_prefix}}data/topicsIndex

    #wordforms = {{spinx_path}}data/alto/wordforms.txt

    docinfo = extern

    morphology = stem_enru

    charset_type = utf-8

    html_strip = 1

    html_remove_elements = style, script, code
}

index {{spinx_prefix}}commentsIndex : {{spinx_prefix}}topicsIndex
{
    source = {{spinx_prefix}}commentsSource

    path = {{spinx_path}}data/{{spinx_prefix}}data/commentsIndex
}

#############################################################################
## indexer settings
#############################################################################

indexer
{
    mem_limit = 32M
}

#############################################################################
## searchd settings
#############################################################################

searchd
{
    #listen = /var/run/sphinx.socket
    #listen = 9312

    log = {{spinx_path}}logs/{{spinx_prefix}}logs/searchd.log

    query_log = {{spinx_path}}logs/{{spinx_prefix}}logs/query.log

    # binlog.001 etc will be created there
    binlog_path = {{spinx_path}}logs/{{spinx_prefix}}logs/

    read_timeout = 5

    client_timeout = 300

    max_children = 100

    pid_file = {{spinx_path}}logs/searchd.pid

    workers	= threads

    compat_sphinxql_magics = 0
}

# --eof--